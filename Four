git clone https://github.com/GoogleCloudPlatform/kubernetes-engine-samples
cd kubernetes-engine-samples/hello-app
docker build -t REGION-docker.pkg.dev/${PROJECT_ID}/hello-repo/hello-app:v1 .
docker images
docker run --rm -p 8080:8080 REGION-docker.pkg.dev/${PROJECT_ID}/hello-repo/hello-app:v1
curl http://localhost:8080
gcloud auth configure-docker REGION-docker.pkg.dev
docker push REGION-docker.pkg.dev/${PROJECT_ID}/hello-repo/hello-app:v1
gcloud config set compute/zone COMPUTE_ZONE
gcloud config set compute/region COMPUTE_REGION
gcloud container clusters create hello-cluster
gcloud container clusters create-auto hello-cluster
kubectl get nodes
gcloud container clusters get-credentials hello-cluster --zone COMPUTE_ZONE
kubectl create deployment hello-app --image=REGION-docker.pkg.dev/${PROJECT_ID}/hello-repo/hello-app:v1
kubectl scale deployment hello-app --replicas=3
kubectl autoscale deployment hello-app --cpu-percent=80 --min=1 --max=5
kubectl get pods
kubectl expose deployment hello-app --name=hello-app-service --type=LoadBalancer --port 80 --target-port 8080
kubectl get service
docker build -t REGION-docker.pkg.dev/${PROJECT_ID}/hello-repo/hello-app:v2 .
docker push REGION-docker.pkg.dev/${PROJECT_ID}/hello-repo/hello-app:v2
kubectl set image deployment/hello-app hello-app=REGION-docker.pkg.dev/${PROJECT_ID}/hello-repo/hello-app:v2
watch kubectl get pods
kubectl delete service hello-app-service
gcloud container clusters delete hello-cluster --zone COMPUTE_ZONE
gcloud artifacts docker images delete \
    REGION-docker.pkg.dev/${PROJECT_ID}/hello-repo/hello-app:v1 \
    --delete-tags --quiet
gcloud artifacts docker images delete \
    REGION-docker.pkg.dev/${PROJECT_ID}/hello-repo/hello-app:v2 \
    --delete-tags --quiet
